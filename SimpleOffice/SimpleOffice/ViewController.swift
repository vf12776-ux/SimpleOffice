import Cocoa

class ViewController: NSViewController {
    
    // MARK: - UI Elements
    @IBOutlet weak var textView: NSTextView!
    private var nuclearButton: NSButton!
    private var pomodoroButton: NSButton!
    private var pomodoroLabel: NSTextField!
    
    // MARK: - Pomodoro Timer
    private var pomodoroTimer: Timer?
    private var workTime: Int = 25 * 60 // 25 –º–∏–Ω—É—Ç
    private var breakTime: Int = 5 * 60  // 5 –º–∏–Ω—É—Ç
    private var isWorkSession: Bool = true
    private var timeRemaining: Int = 0
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
    }
    
    private func setupUI() {
        setupTextView()
        setupNuclearButton()
        setupPomodoroSection()
        setupTheming()
    }
    
    private func setupTextView() {
        textView.font = NSFont.systemFont(ofSize: 14)
        textView.string = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SimpleOffice!\n\n–ù–∞—á–Ω–∏—Ç–µ –ø–∏—Å–∞—Ç—å –∑–¥–µ—Å—å..."
    }
    
    private func setupNuclearButton() {
        nuclearButton = NSButton(title: "üí• –ù–∞—Ö–µ—Ä –≤—Å—ë", target: self, action: #selector(nuclearOption))
        nuclearButton.frame = NSRect(x: 20, y: 20, width: 120, height: 30)
        nuclearButton.bezelStyle = .rounded
        nuclearButton.contentTintColor = .systemRed
        view.addSubview(nuclearButton)
    }
    
    // MARK: - Pomodoro Timer Implementation
    private func setupPomodoroSection() {
        // –ö–Ω–æ–ø–∫–∞ Pomodoro
        pomodoroButton = NSButton(title: "üçÖ –°—Ç–∞—Ä—Ç", target: self, action: #selector(togglePomodoro))
        pomodoroButton.frame = NSRect(x: 160, y: 20, width: 100, height: 30)
        pomodoroButton.bezelStyle = .rounded
        view.addSubview(pomodoroButton)
        
        // –ú–µ—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–∞
        pomodoroLabel = NSTextField(labelWithString: "25:00")
        pomodoroLabel.frame = NSRect(x: 270, y: 20, width: 60, height: 30)
        pomodoroLabel.alignment = .center
        pomodoroLabel.font = NSFont.monospacedDigitSystemFont(ofSize: 14, weight: .medium)
        view.addSubview(pomodoroLabel)
    }
    
    @objc private func togglePomodoro() {
        if pomodoroTimer == nil {
            startPomodoro()
        } else {
            stopPomodoro()
        }
    }
    
    private func startPomodoro() {
        timeRemaining = isWorkSession ? workTime : breakTime
        pomodoroTimer = Timer.scheduledTimer(timeInterval: 1.0, target: self, selector: #selector(updateTimer), userInfo: nil, repeats: true)
        pomodoroButton.title = "‚è∏Ô∏è –ü–∞—É–∑–∞"
        updateTimerDisplay()
    }
    
    private func stopPomodoro() {
        pomodoroTimer?.invalidate()
        pomodoroTimer = nil
        pomodoroButton.title = "üçÖ –°—Ç–∞—Ä—Ç"
    }
    
    @objc private func updateTimer() {
        timeRemaining -= 1
        updateTimerDisplay()
        
        if timeRemaining <= 0 {
            pomodoroTimer?.invalidate()
            pomodoroTimer = nil
            
            let sessionType = isWorkSession ? "–†–∞–±–æ—Ç–∞" : "–û—Ç–¥—ã—Ö"
            showNotification(title: "Pomodoro –∑–∞–≤–µ—Ä—à–µ–Ω!", message: "–°–µ—Å—Å–∏—è \(sessionType) –∑–∞–∫–æ–Ω—á–µ–Ω–∞.")
            
            isWorkSession.toggle()
            pomodoroButton.title = "üçÖ –°—Ç–∞—Ä—Ç"
        }
    }
    
    private func updateTimerDisplay() {
        let minutes = timeRemaining / 60
        let seconds = timeRemaining % 60
        pomodoroLabel.stringValue = String(format: "%02d:%02d", minutes, seconds)
    }
    
    // MARK: - Nuclear Option
    @objc private func nuclearOption() {
        let alert = NSAlert()
        alert.messageText = "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏"
        alert.informativeText = "–¢–æ—á–Ω–æ –Ω–∞—Ö–µ—Ä –≤—Å—ë? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!"
        alert.addButton(withTitle: "–î–∞, –Ω–∞—Ö–µ—Ä!")
        alert.addButton(withTitle: "–û—Ç–º–µ–Ω–∞")
        
        if alert.runModal() == .alertFirstButtonReturn {
            textView.string = ""
            showNotification(title: "–¢–µ–∫—Å—Ç –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω!", message: "üí• –ù–∞—á–∏–Ω–∞–π—Ç–µ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞!")
        }
    }
    
    // MARK: - Theming & Customization
    private func setupTheming() {
        // –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if #available(macOS 10.14, *) {
            view.window?.appearance = NSAppearance(named: .darkAqua)
        }
    }
    
    private func showNotification(title: String, message: String) {
        let notification = NSUserNotification()
        notification.title = title
        notification.informativeText = message
        NSUserNotificationCenter.default.deliver(notification)
    }
}
